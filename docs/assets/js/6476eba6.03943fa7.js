"use strict";(self.webpackChunkfreyja=self.webpackChunkfreyja||[]).push([[827],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,d=p["".concat(s,".").concat(f)]||p[f]||m[f]||i;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_label:"Usage",sidebar_position:4},o="Usage",l={unversionedId:"usage",id:"usage",title:"Usage",description:"To create virtual machines and networks, you need to :",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/freyja/docs/usage",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Usage",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/freyja/docs/quickstart"},next:{title:"Configuration",permalink:"/freyja/docs/configuration"}},s={},c=[{value:"Tips",id:"tips",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"To create virtual machines and networks, you need to :"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Download an OS cloud image (qcow2, img, ...)"),(0,a.kt)("li",{parentName:"ul"},"Create a YAML configuration"))),(0,a.kt)("p",null,"The proper virtual host and networks described in the configuration file will be created using Libvirt and Qemu."),(0,a.kt)("p",null,"For further usage, run :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"freyja --help\n")),(0,a.kt)("h2",{id:"tips"},"Tips"),(0,a.kt)("p",null,"Debug the configuration :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"freyja machine create -c ~/myconfig.yaml --dry-run -v\n")),(0,a.kt)("p",null,"Install the machines using the configuration :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"freyja machine create -c myconfig.yaml\n")),(0,a.kt)("p",null,"List the existing machines :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"freyja machine list\n")),(0,a.kt)("p",null,"Describe the existing machines :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"freyja machine info\n# filter by name\nfreyja machine info vm1 vm2\n")),(0,a.kt)("p",null,"Check machines' activity in real time :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# all\nfreyja machine usage --watch\n# filter by name\nfreyja machine usage vm1 vm2 --watch\n# static usage (one time display)\nfreyja machine usage vm1\n")),(0,a.kt)("p",null,"List mac addresses already in use :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"freyja machine info | grep mac\n")),(0,a.kt)("p",null,"List networks:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"freyja network list\n")),(0,a.kt)("p",null,"Describe networks :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"freyja network info \n# filter by name\nfreyja network info net1 net2\n")))}m.isMDXComponent=!0}}]);